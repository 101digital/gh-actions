name: Sanitization checks (devops)

on:
  workflow_call:

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    name: pre-commit
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v4
        with:
          python-version: "3.9"
      - uses: hashicorp/setup-terraform@v2

      - name: Run pre-commit checks on delta changes
        id: pre-commit-delta
        uses: pre-commit/action@v3.0.0
        with:
          extra_args: -v --from-ref ${{ github.event.pull_request.base.sha }} --to-ref ${{ github.event.pull_request.head.sha }}

      - name: add-pre-commit-comment
        id: comment
        uses: actions/github-script@v6
        if: ${{ github.event_name == 'pull_request' &&  always() }}
        with:
          script: |
            const pr = {
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
            };
            const {data: reviews} = await github.rest.pulls.listReviews(pr);
            let review = reviews.find(review => {
              return (
                (review?.user?.login ?? '') == 'github-actions[bot]' &&
                (review?.body ?? '').startsWith('#### Pre commit checks')
              )
            });
            const precommitstep = "5:1";
            const list = await github.rest.actions.listJobsForWorkflowRun({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: context.runId,
            });
            const output = `#### Pre commit checks ðŸ“– \`${{ steps.pre-commit-delta.outcome }}\`

            <a href="`+list.data.jobs[0].html_url+`#step:`+precommitstep+`">Link to Precommit check run output</a>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Workflow: \`${{ github.workflow }}\`*`;

            if (review === undefined) {
              github.rest.pulls.createReview({
                ...pr,
                body: output,
                event: "COMMENT",
              });
            } else {
              github.rest.pulls.updateReview({
                ...pr,
                body: output,
                review_id: review.id
              });
            }
  conventional-pr-title:
    name: convential pr title
    runs-on: ubuntu-latest
    steps:
      - uses: amannn/action-semantic-pull-request@v5
        id: lint-pr-title
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: add-pr-title-comment
        id: comment
        uses: actions/github-script@v6
        if: ${{ github.event_name == 'pull_request' && always() }}
        with:
          script: |
            const pr = {
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
            };
            const {data: reviews} = await github.rest.pulls.listReviews(pr);
            let review = reviews.find(review => {
              return (
                (review?.user?.login ?? '') == 'github-actions[bot]' &&
                (review?.body ?? '').startsWith('#### PR title checks')
              )
            });
            const output = `#### PR title checks ðŸ“– \`${{ steps.lint-pr-title.outcome }}\`

            <details>
              <summary>PR title should follow Conventional Commits</summary>
              ${{ steps.lint-pr-title.outputs.error_message }}
            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Workflow: \`${{ github.workflow }}\`*`;

            if (review === undefined) {
              github.rest.pulls.createReview({
                ...pr,
                body: output,
                event: "COMMENT",
              });
            } else {
              github.rest.pulls.updateReview({
                ...pr,
                body: output,
                review_id: review.id
              });
            }
